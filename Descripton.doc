Программа реализована с помощью следующих классов:
ClosestPointPair - главный класс содержащий метод main()
Point - класс полями которого являются координаты точки. Также содержит метод int DistToPointSqr(Point p) который 
        возвращает квадрат расстояния от вызывающей точки до "p".
ComparatorPointsByXY - реализует интерфейс Comparator<Point>, переопределяет метод compare() . Сравнивает объекты 
        типа Point путем сравнения целочисленных значений полей x. Если значения x совпадают, то сравнение продолжается
        по значениям y.
ComparatorPointsByY - реализует интерфейс Comparator<Point>, переопределяет метод compare() . Сравнивает объекты 
        типа Point путем сравнения целочисленных значений полей y. 
Algs - содержит два метода int SimplAlg(List<Point> points), int FastAlg(List<Point> points) возвращающие квадрат 
        минимального расстояния между двумя точками из набора точек. Набор точек передается методу в виде параметра 
        типа List<Point>.

В методе SimplAlg() реализован простой алгоритм нахождения минимального расстояния между двумя точками из набора 
точек путем вычисления квадратов расстояний между всевозможными парами точек из данного набора и последующего 
нахождения минимального из них. Асимптотика данного алгоритма равняется O(n*n).

В методе FastAlg() реализован алгоритм нахождения минимального расстояния между двумя точками из набора точек 
по принципу "разделяй и властвуй". Алгоритм представляет собой рекурсивную функцию, которой передается набор точек; 
функция разбивает набор точек пополам и вызывает себя от каждой половины, а затем выполняет операции по объединению 
ответов от каждой половины. Операция объединения заключается в обнаружении случаев, когда одна точка оптимального 
решения попала в одну половину, а другая - в другую. Рекурсивный вызов метода продолжается до тех пор пока в 
очередном разделенном наборе не окажется меньше четырех точек. Для таких наборов вызывается метод SimplAlg(от данного 
набора) который возвращает квадрат минимального расстояния между двумя точками из данного набора
Асимптотика данного алгоритма равняется O(n*log(n)), при условии, что асимптотика стадии объединения является 
не более O(n), что в алгоритме реализованном в программе соблюдается

Получение входных данных происходит в методе main() путем построчного считывания координат точек из файла и 
добавления их в экземпляр объекта типа TreeSet<Point> (new ComparatorPointsByXY(). Используя TreeSet, мы получаем 
уже отсортированный набор точек, что ускоряет дальнейшую работу алгоритма.

Ниже представлена сравнительная таблица (табл. 1) скорости выполнения двух алгоритмов в зависимости от количества точек.
Видно, что указанные выше асимптотики выполняются 

                                Таблица 1
	Среднее время выполнения (в секундах)
(Процессор core i7, 4 ядра, 2.2 Ггц; ОЗУ 8Гб) 

Количество точек | SimplAlg	| FastAlg
     10 000	          <1        <1
    100 000	          53        <1
  1 000 000	        3250        18
 10 000 000	          -         49
100 000 000	          -        135
		








